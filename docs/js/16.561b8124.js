(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[16],{"170c":function(t,e,s){"use strict";s.r(e);var o=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("q-page",{staticClass:"items-center row"},[t.isLoad?s("div",{staticClass:"row justify-center full-width"},[s("div",{staticClass:"col-lg-6 col-xl-4 col-md-7 q-pa-md"},[s("div",{staticClass:"title flex"},[s("h1",{staticClass:"text-h5"},[t._v("Start matching for a table.")])]),s("q-form",{ref:"form",staticClass:"q-mb-md",attrs:{autocorrect:"off",autocapitalize:"off",autocomplete:"off",spellcheck:"false"}},[s("q-input",{ref:"input",attrs:{outlined:"",type:"text",label:"What are you working on?",rules:[function(t){return t.trim().length>0||"Please write something"}]},on:{blur:function(e){return t.$refs.input.resetValidation()}},model:{value:t.task,callback:function(e){t.task=e},expression:"task"}}),t.$store.state.userModule.isPremium?t._e():s("div",{staticClass:"text-grey"},[t._v("Free members can match table once a day,\n"),s("a",{staticClass:"get-premium text-grey",attrs:{href:"#"}},[t._v("get premium membership for $5 / month.")])])],1),s("div",{staticClass:"row justify-center q-pt-md"},[s("div",{staticClass:"col-lg-5 col-sm-6"},[s("q-btn",{staticClass:"q-mb-md full-width text-weight-regular app-button",attrs:{"no-caps":"",dense:"",color:"grey-9",label:"Match Table"},on:{click:t.onMatch}}),s("q-btn",{staticClass:"full-width text-weight-regular app-button",attrs:{outline:"","no-caps":"",dense:"",color:"grey-8",icon:"add",label:"Create Private Table"},on:{click:t.onCreatePrivate}})],1)])],1)]):t._e()])},i=[],a=s("60a3"),r=s("a6c8"),n=function(t,e,s,o){var i,a=arguments.length,r=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,s):o;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)r=Reflect.decorate(t,e,s,o);else for(var n=t.length-1;n>=0;n--)(i=t[n])&&(r=(a<3?i(r):a>3?i(e,s,r):i(e,s))||r);return a>3&&r&&Object.defineProperty(e,s,r),r},c=function(t,e,s,o){function i(t){return t instanceof s?t:new s((function(e){e(t)}))}return new(s||(s=Promise))((function(s,a){function r(t){try{c(o.next(t))}catch(e){a(e)}}function n(t){try{c(o["throw"](t))}catch(e){a(e)}}function c(t){t.done?s(t.value):i(t.value).then(r,n)}c((o=o.apply(t,e||[])).next())}))};let l=class extends a["d"]{constructor(){super(...arguments),this.task="",this.rooms=[],this.isLoad=!1}mounted(){return c(this,void 0,void 0,(function*(){this.$q.loading.show(),yield r["c"].collection("users").doc(this.$store.state.userModule.uid).get().then((t=>c(this,void 0,void 0,(function*(){const e=t.exists&&t.data().roomId;e&&(yield r["c"].collection("rooms").doc(e).get().then((t=>t.exists&&"active"===t.data().status?(this.$router.push({name:"VideoChatTable",params:{roomId:e}}),t):r["c"].collection("users").doc(this.$store.state.userModule.uid).update({roomId:null}))))})))),this.isLoad=!0,this.$q.loading.hide(),(!this.$store.getters["authModule/isAuth"]||this.$store.getters["authModule/isAuth"]&&this.$store.getters["authModule/isGuest"])&&(this.$router.push({name:"Welcome"}),this.$q.notify({icon:"report_problem",color:"warning",message:"Access denied! Please Sign In"}))}))}onMatch(){return c(this,void 0,void 0,(function*(){const t=yield this.$refs.form.validate();if(!t)return;let e=this.rooms[0]&&this.rooms[0].id;const{uid:s}=this.$store.state.userModule,o={uid:s,task:this.task};if(e){const t=r["c"].batch(),i=r["c"].collection("rooms").doc(e),a=i.collection("users").doc(s);t.update(i,{userIds:r["e"].FieldValue.arrayUnion(s)}),yield a.get().then((s=>{s.exists?(o.updatedAt=r["e"].FieldValue.serverTimestamp(),t.update(a,o)):(o.createdAt=r["e"].FieldValue.serverTimestamp(),t.set(a,o)),t.commit().then((()=>{i.get().then((t=>{r["c"].collection("rooms").doc(e).update({activeCandidatesCount:t.data().userIds.length})}))}))}))}else e=yield this.createRoomFromUsers({isPublic:1},o);this.updateUser(s,{roomId:e}).then((()=>{this.$router.push({name:"Matching"})}))}))}onCreatePrivate(){return c(this,void 0,void 0,(function*(){const t=yield this.$refs.form.validate();if(!t)return;const{uid:e}=this.$store.state.userModule,s={uid:e,task:this.task},o=yield this.createRoomFromUsers({isPublic:0},s);this.updateUser(e,{roomId:o}).then((()=>{this.$router.push({name:"VideoChatTable",params:{roomId:o}})}))}))}updateUser(t,e){return r["c"].collection("users").doc(t).update(e)}createRoomFromUsers(t,e){return r["c"].collection("rooms").add(Object.assign(Object.assign({},t),{status:"active",activeCandidatesCount:1,userIds:r["e"].FieldValue.arrayUnion(e.uid),createdAt:r["e"].FieldValue.serverTimestamp()})).then((t=>{const s=t.id;return e.createdAt=r["e"].FieldValue.serverTimestamp(),r["c"].collection("rooms").doc(s).collection("users").doc(e.uid).set(e),s}))}};l=n([Object(a["a"])({firestore:{rooms:r["c"].collection("rooms").where("isPublic","==",1).where("status","==","active").where("activeCandidatesCount","<",4).limit(1)}})],l);var u=l,d=u,h=s("2877"),m=s("9989"),f=s("0378"),p=s("27f9"),v=s("9c40"),g=s("eebe"),b=s.n(g),y=Object(h["a"])(d,o,i,!1,null,null,null);e["default"]=y.exports;b()(y,"components",{QPage:m["a"],QForm:f["a"],QInput:p["a"],QBtn:v["a"]})}}]);